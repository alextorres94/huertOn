{% extends '::base.html.twig' %}

{% block body %}

<div class="fullscreen background parallax" style="background-image: url('https://source.unsplash.com/rHbob_bEsSs/1600x900&quot'); background-attachment: fixed;" data-img-width="1600" data-img-height="1064" data-diff="100">
  <div class="content-a">
    <div class="content-b">
      <span id="title-home_search">{{ 'home.title'|trans }}</span><br><br><br><br>
      <form id="form-home_search" action="/find/orchard" method="post">
        <input id="input-home_search" name="input-home_search" type="text" placeholder="{{ 'home.find.placeholder'|trans }}" required="true"><button id="btn-home_search" class="button" type="submit">{{ 'home.btn.search'|trans }}</button>
        <input id="user_latitude" name="user_latitude" type="text" hidden="hidden">
        <input id="user_longitude" name="user_longitude" type="text" hidden="hidden">
      </form>
    </div>
  </div>
</div>
<br>
<div class="container">

  <h1 class="text-sm-center text-md-center text-lg-center text-xl-center">{{ 'home.activities'|trans }}</h1>
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi elementum velit eget velit hendrerit, eu malesuada lacus posuere. Nam vel dapibus erat. Donec ex risus, tincidunt eu molestie quis, pellentesque et neque. Nulla et eros vitae eros molestie facilisis. Nulla aliquet augue et dui congue dignissim. Vivamus rutrum nisl eu ex posuere, at ornare dolor tincidunt. Donec tellus tortor, lobortis sed egestas sed, vulputate ac est. Duis ut lacus non ex rutrum rhoncus. Proin lobortis nisi ligula, eget elementum urna egestas eget. Duis risus diam, fermentum quis efficitur a, posuere eu erat. Vivamus in commodo sem, id luctus nisi. Sed ullamcorper, nisl imperdiet tincidunt auctor, turpis est sagittis metus, vitae tempor ligula elit id metus. Ut rutrum posuere ante, sed condimentum nibh.</p>
  <p>Nam vel dapibus erat. Donec ex risus, tincidunt eu molestie quis, pellentesque et neque. Nulla et eros vitae eros molestie facilisis. Nulla aliquet augue et dui congue dignissim. Vivamus rutrum nisl eu ex posuere, at ornare dolor tincidunt. Donec tellus tortor, lobortis sed egestas sed, vulputate ac est. Duis ut lacus non ex rutrum rhoncus. Proin lobortis nisi ligula, eget elementum urna egestas eget. Duis risus diam, fermentum quis efficitur a, posuere eu erat. Vivamus in commodo sem, id luctus nisi. Sed ullamcorper, nisl imperdiet tincidunt auctor, turpis est sagittis metus, vitae tempor ligula elit id metus. Ut rutrum posuere ante, sed condimentum nibh.</p>
</div>
<script type="text/javascript">

/* detect touch */
if("ontouchstart" in window){
  document.documentElement.className = document.documentElement.className + " touch";
}
if(!$("html").hasClass("touch")){
  /* background fix */
  $(".parallax").css("background-attachment", "fixed");
}

/* fix vertical when not overflow
call fullscreenFix() if .fullscreen content changes */
function fullscreenFix(){
  var h = $('body').height();
  // set .fullscreen height
  $(".content-b").each(function(i){
    if($(this).innerHeight() > h){ $(this).closest(".fullscreen").addClass("overflow");
  }
});
}
$(window).resize(fullscreenFix);
fullscreenFix();

/* resize background images */
function backgroundResize(){
  var windowH = $(window).height();
  $(".background").each(function(i){
    var path = $(this);
    // variables
    var contW = path.width();
    var contH = path.height();
    var imgW = path.attr("data-img-width");
    var imgH = path.attr("data-img-height");
    var ratio = imgW / imgH;
    // overflowing difference
    var diff = parseFloat(path.attr("data-diff"));
    diff = diff ? diff : 0;
    // remaining height to have fullscreen image only on parallax
    var remainingH = 0;
    if(path.hasClass("parallax") && !$("html").hasClass("touch")){
      var maxH = contH > windowH ? contH : windowH;
      remainingH = windowH - contH;
    }
    // set img values depending on cont
    imgH = contH + remainingH + diff;
    imgW = imgH * ratio;
    // fix when too large
    if(contW > imgW){
      imgW = contW;
      imgH = imgW / ratio;
    }
    //
    path.data("resized-imgW", imgW);
    path.data("resized-imgH", imgH);
    path.css("background-size", imgW + "px " + imgH + "px");
  });
}
$(window).resize(backgroundResize);
$(window).focus(backgroundResize);
backgroundResize();

/* set parallax background-position */
function parallaxPosition(e){
  var heightWindow = $(window).height();
  var topWindow = $(window).scrollTop();
  var bottomWindow = topWindow + heightWindow;
  var currentWindow = (topWindow + bottomWindow) / 2;
  $(".parallax").each(function(i){
    var path = $(this);
    var height = path.height();
    var top = path.offset().top;
    var bottom = top + height;
    // only when in range
    if(bottomWindow > top && topWindow < bottom){
      var imgW = path.data("resized-imgW");
      var imgH = path.data("resized-imgH");
      // min when image touch top of window
      var min = 0;
      // max when image touch bottom of window
      var max = - imgH + heightWindow;
      // overflow changes parallax
      var overflowH = height < heightWindow ? imgH - height : imgH - heightWindow; // fix height on overflow
      top = top - overflowH;
      bottom = bottom + overflowH;
      // value with linear interpolation
      var value = min + (max - min) * (currentWindow - top) / (bottom - top);
      // set background-position
      var orizontalPosition = path.attr("data-oriz-pos");
      orizontalPosition = orizontalPosition ? orizontalPosition : "50%";
      $(this).css("background-position", orizontalPosition + " " + value + "px");
    }
  });
}
if(!$("html").hasClass("touch")){
  $(window).resize(parallaxPosition);
  //$(window).focus(parallaxPosition);
  $(window).scroll(parallaxPosition);
  parallaxPosition();
}

navigator.geolocation.getCurrentPosition(success, error, options);

var options = {
  enableHighAccuracy: true,
  timeout: 5000,
  maximumAge: 0
};

function success(pos) {
  var crd = pos.coords;

  var user_latitude = crd.latitude;
  var user_longitude = crd.longitude;

  console.log('Your current position is:');
  console.log('Latitude : ' + crd.latitude);
  console.log('Longitude: ' + crd.longitude);
  console.log('More or less ' + crd.accuracy + ' meters.');

  $('#user_latitude').val(user_latitude);
  $('#user_longitude').val(user_longitude);

};

function error(err) {
  console.warn('ERROR(' + err.code + '): ' + err.message);
};

</script>

{% endblock %}
