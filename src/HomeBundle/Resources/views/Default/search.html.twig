{% extends '::base.html.twig' %}

{% block body %}

  <div class="fullscreen background parallax" style="background-image: url('https://source.unsplash.com/rHbob_bEsSs/1600x900&quot'); background-attachment: fixed;" data-img-width="1600" data-img-height="1064" data-diff="100">
    <div class="content-a">
      <div class="content-b">
        <span id="title-home_search">Busca un huerto para ti</span><br><br><br><br>
        <input type="text" id="input-home_search" placeholder="Pon tu ciudad, CP o nombre del huerto"><button id="btn-home_search" class="button" type="button">Buscar</button>
      </div>
    </div>
  </div>
  <br>
  <div class="container-fluid">

    <div class="row">
    {#{% for item in seq %}#}
      <div class="col-lg-6 col-md-6 col-xs-12 col-sm-12">
        <div class="col-lg-8 col-md-8 col-xs-8 col-sm-8">
          <div style="width: 100%; height: 300px; background: url(http://img.jardineriaon.com/wp-content/uploads/2015/03/huerto-1024x768.jpg); background-size: cover; background-repeat: no-repeat; background-position: center;"></div>
        </div>
        <div class="col-lg-4 col-md-4 col-xs-4 col-sm-4">
        <h6>Nombre</h6>
        </div>
        <p><i>Direcci√≥n</i></p>
      </div>
      {#{% endfor %}#}
    </div>


  </div>
  <script type="text/javascript">
  /* detect touch */
if("ontouchstart" in window){
  document.documentElement.className = document.documentElement.className + " touch";
}
if(!$("html").hasClass("touch")){
  /* background fix */
  $(".parallax").css("background-attachment", "fixed");
}

/* fix vertical when not overflow
call fullscreenFix() if .fullscreen content changes */
function fullscreenFix(){
  var h = $('body').height();
  // set .fullscreen height
  $(".content-b").each(function(i){
      if($(this).innerHeight() > h){ $(this).closest(".fullscreen").addClass("overflow");
      }
  });
}
$(window).resize(fullscreenFix);
fullscreenFix();

/* resize background images */
function backgroundResize(){
  var windowH = $(window).height();
  $(".background").each(function(i){
      var path = $(this);
      // variables
      var contW = path.width();
      var contH = path.height();
      var imgW = path.attr("data-img-width");
      var imgH = path.attr("data-img-height");
      var ratio = imgW / imgH;
      // overflowing difference
      var diff = parseFloat(path.attr("data-diff"));
      diff = diff ? diff : 0;
      // remaining height to have fullscreen image only on parallax
      var remainingH = 0;
      if(path.hasClass("parallax") && !$("html").hasClass("touch")){
          var maxH = contH > windowH ? contH : windowH;
          remainingH = windowH - contH;
      }
      // set img values depending on cont
      imgH = contH + remainingH + diff;
      imgW = imgH * ratio;
      // fix when too large
      if(contW > imgW){
          imgW = contW;
          imgH = imgW / ratio;
      }
      //
      path.data("resized-imgW", imgW);
      path.data("resized-imgH", imgH);
      path.css("background-size", imgW + "px " + imgH + "px");
  });
}
$(window).resize(backgroundResize);
$(window).focus(backgroundResize);
backgroundResize();

/* set parallax background-position */
function parallaxPosition(e){
  var heightWindow = $(window).height();
  var topWindow = $(window).scrollTop();
  var bottomWindow = topWindow + heightWindow;
  var currentWindow = (topWindow + bottomWindow) / 2;
  $(".parallax").each(function(i){
      var path = $(this);
      var height = path.height();
      var top = path.offset().top;
      var bottom = top + height;
      // only when in range
      if(bottomWindow > top && topWindow < bottom){
          var imgW = path.data("resized-imgW");
          var imgH = path.data("resized-imgH");
          // min when image touch top of window
          var min = 0;
          // max when image touch bottom of window
          var max = - imgH + heightWindow;
          // overflow changes parallax
          var overflowH = height < heightWindow ? imgH - height : imgH - heightWindow; // fix height on overflow
          top = top - overflowH;
          bottom = bottom + overflowH;
          // value with linear interpolation
          var value = min + (max - min) * (currentWindow - top) / (bottom - top);
          // set background-position
          var orizontalPosition = path.attr("data-oriz-pos");
          orizontalPosition = orizontalPosition ? orizontalPosition : "50%";
          $(this).css("background-position", orizontalPosition + " " + value + "px");
      }
  });
}
if(!$("html").hasClass("touch")){
  $(window).resize(parallaxPosition);
  //$(window).focus(parallaxPosition);
  $(window).scroll(parallaxPosition);
  parallaxPosition();
}
  </script>

{% endblock %}
